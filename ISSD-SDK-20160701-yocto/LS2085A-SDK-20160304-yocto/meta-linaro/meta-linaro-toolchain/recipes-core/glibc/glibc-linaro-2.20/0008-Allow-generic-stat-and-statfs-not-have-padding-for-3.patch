From aad845880291f1e6af7c9721f1c53ed36abd10e6 Mon Sep 17 00:00:00 2001
From: Andrew Pinski <apinski@cavium.com>
Date: Mon, 27 Oct 2014 00:59:31 -0700
Subject: [PATCH 08/32] Allow generic stat and statfs not have padding for
 32bit targets

With ILP32, off_t, ino_t, blkcnt_t, fsbcnt_t, fsbfilcnt_t are all
64bit types, this allows us to use the same layout for the
structure stat and statfs as LP64.  So we need to remove
the padding which is added for non 64bit targets.

* sysdeps/unix/sysv/linux/generic/bits/stat.h (__field64): Use
the 64bit version when off_t, ino_t and blkcnt_t match their 64bit
version.
* sysdeps/unix/sysv/linux/generic/bits/statfs.h (__field64): Use
the 64bit version when fsblkcnt_t and fsfilcnt_t match their 64bit
version.
---
 sysdeps/unix/sysv/linux/generic/bits/stat.h   | 5 ++++-
 sysdeps/unix/sysv/linux/generic/bits/statfs.h | 4 +++-
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/sysdeps/unix/sysv/linux/generic/bits/stat.h b/sysdeps/unix/sysv/linux/generic/bits/stat.h
index faa2800..3c92184 100644
--- a/sysdeps/unix/sysv/linux/generic/bits/stat.h
+++ b/sysdeps/unix/sysv/linux/generic/bits/stat.h
@@ -42,7 +42,10 @@
 
 #if defined __USE_FILE_OFFSET64
 # define __field64(type, type64, name) type64 name
-#elif __WORDSIZE == 64
+#elif __WORDSIZE == 64 \
+      || (defined(__OFF_T_MATCHES_OFF64_T) \
+	  && defined(__INO_T_MATCHES_INO64_T) \
+	  && defined (__BLKCNT_T_TYPE_MATCHES_BLKCNT64_T_TYPE))
 # define __field64(type, type64, name) type name
 #elif __BYTE_ORDER == __LITTLE_ENDIAN
 # define __field64(type, type64, name) \
diff --git a/sysdeps/unix/sysv/linux/generic/bits/statfs.h b/sysdeps/unix/sysv/linux/generic/bits/statfs.h
index e32cf76..d3bfb50 100644
--- a/sysdeps/unix/sysv/linux/generic/bits/statfs.h
+++ b/sysdeps/unix/sysv/linux/generic/bits/statfs.h
@@ -34,7 +34,9 @@
 
 #if defined __USE_FILE_OFFSET64
 # define __field64(type, type64, name) type64 name
-#elif __WORDSIZE == 64
+#elif __WORDSIZE == 64							\
+      || (defined (__FSBLKCNT_T_TYPE_MATCHES_FSBLKCNT64_T_TYPE)		\
+	  && defined (__FSFILCNT_T_TYPE_MATCHES_FSFILCNT64_T_TYPE))
 # define __field64(type, type64, name) type name
 #elif __BYTE_ORDER == __LITTLE_ENDIAN
 # define __field64(type, type64, name) \
-- 
1.9.3

