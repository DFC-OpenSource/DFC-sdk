Fix large integer type issue for aarch64 small model.

32bit vs 64bit host compilers are different. this fix the following
glibc build error in 32bit host:
| ./../include/libc-symbols.h:64:5: warning: "__OPTION_EGLIBC_LOCALE_CODE" is not defined [-Wundef]
|  #if __OPTION_EGLIBC_LOCALE_CODE
|      ^   
| argp-help.c: In function '_help':
| argp-help.c:1685:1: internal compiler error: Segmentation fault
|  }

Signed-off-by: Zongchun Yu <Zongchun.Yu@freescale.com>

diff -uNr a/gcc/config/aarch64/aarch64.c b/gcc/config/aarch64/aarch64.c
--- a/gcc/config/aarch64/aarch64.c	2015-03-12 05:08:09.000000000 +0800
+++ b/gcc/config/aarch64/aarch64.c	2015-08-17 16:13:36.000000000 +0800
@@ -6664,8 +6664,8 @@
 	  /* Same reasoning as the tiny code model, but the offset cap here is
 	     4G.  */
 	  if (SYMBOL_REF_WEAK (x)
-	      || INTVAL (offset) < (HOST_WIDE_INT) -4294967263
-	      || INTVAL (offset) > (HOST_WIDE_INT) 4294967264)
+	      || !IN_RANGE (INTVAL (offset), HOST_WIDE_INT_C (-4294967263),
+	                           HOST_WIDE_INT_C (4294967264)))
 	    return SYMBOL_FORCE_TO_MEM;
 	  return SYMBOL_SMALL_ABSOLUTE;
 
