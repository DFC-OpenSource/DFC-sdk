Adjust test cases to work with busybox.

- Replace dd parameter "obs" with "bs".
- Replace "head -<num>" with "head -n <num>".

Signed-off-by: Maxin B. John <maxin.john@enea.com>
Upstream-Status: Pending

--- a/regress/cipher-speed.sh	2012-06-30 07:08:53.000000000 +0200
+++ b/regress/cipher-speed.sh	2013-02-15 11:30:20.670022055 +0100
@@ -26,7 +26,7 @@
 		echon "$c/$m:\t"
 		( ${SSH} -o 'compression no' \
 			-F $OBJ/ssh_proxy -2 -m $m -c $c somehost \
-			exec sh -c \'"dd of=/dev/null obs=32k"\' \
+			exec sh -c \'"dd of=/dev/null bs=32k"\' \
 		< ${DATA} ) 2>&1 | getbytes
 
 		if [ $? -ne 0 ]; then
@@ -42,7 +42,7 @@
 		echon "$c:\t"
 		( ${SSH} -o 'compression no' \
 			-F $OBJ/ssh_proxy -1 -c $c somehost \
-			exec sh -c \'"dd of=/dev/null obs=32k"\' \
+			exec sh -c \'"dd of=/dev/null bs=32k"\' \
 		< ${DATA} ) 2>&1 | getbytes
 		if [ $? -ne 0 ]; then
 			fail "ssh -1 failed with cipher $c"
--- a/regress/transfer.sh	2003-09-04 06:54:40.000000000 +0200
+++ b/regress/transfer.sh	2013-02-15 11:25:34.666411185 +0100
@@ -18,7 +18,7 @@
 	for s in 10 100 1k 32k 64k 128k 256k; do
 		trace "proto $p dd-size ${s}"
 		rm -f ${COPY}
-		dd if=$DATA obs=${s} 2> /dev/null | \
+		dd if=$DATA bs=${s} 2> /dev/null | \
 			${SSH} -q -$p -F $OBJ/ssh_proxy somehost "cat > ${COPY}"
 		if [ $? -ne 0 ]; then
 			fail "ssh cat $DATA failed"
--- a/regress/yes-head.sh	2005-11-28 06:41:03.000000000 +0100
+++ b/regress/yes-head.sh	2013-02-15 11:55:11.413715068 +0100
@@ -4,7 +4,7 @@
 tid="yes pipe head"
 
 for p in 1 2; do
-	lines=`${SSH} -$p -F $OBJ/ssh_proxy thishost 'sh -c "while true;do echo yes;done | _POSIX2_VERSION=199209 head -2000"' | (sleep 3 ; wc -l)`
+	lines=`${SSH} -$p -F $OBJ/ssh_proxy thishost 'sh -c "while true;do echo yes;done | _POSIX2_VERSION=199209 head -n 2000"' | (sleep 3 ; wc -l)`
 	if [ $? -ne 0 ]; then
 		fail "yes|head test failed"
 		lines = 0;
--- a/regress/key-options.sh	2008-07-04 09:08:58.000000000 +0200
+++ b/regress/key-options.sh	2013-02-15 12:06:05.109486098 +0100
@@ -54,7 +54,7 @@
 	fi
 
 	sed 's/.*/from="'"$f"'" &/' $origkeys >$authkeys
-	from=`head -1 $authkeys | cut -f1 -d ' '`
+	from=`head -n 1 $authkeys | cut -f1 -d ' '`
 	verbose "key option proto $p $from"
 	r=`${SSH} -$p -q -F $OBJ/ssh_proxy somehost 'echo true'`
 	if [ "$r" = "true" ]; then
