From b856ff35c20124ceae40bbc4d32584df47618c96 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Wed, 25 Feb 2015 09:28:26 +0000
Subject: [PATCH] hashtable: Remove duplicate hashtable_iterator_value/hashtable_iterator_key

gcc5 is defaulting to gnu11 instead of gnu89 like previous versions
as a result the semantics of 'extern inline' changes where in gnu89 for 'extern inline' no external
visible function is generated,in c99 'external inline' generates externally visible function
there is no equivalent in c99+ because redefinitions arent allowed
but 'static inline' remains same for for c89 and c99+, thats why we change the semantics
so we make the functions static inline, and achieve the same effect

Signed-off-by: Khem Raj <raj.khem@gmail.com>
Upstream-Status: pending

---
 mkfs.ubifs/hashtable/hashtable_itr.c | 12 ------------
 1 file changed, 12 deletions(-)

Index: git/mkfs.ubifs/hashtable/hashtable_itr.h
===================================================================
--- git.orig/mkfs.ubifs/hashtable/hashtable_itr.h
+++ git/mkfs.ubifs/hashtable/hashtable_itr.h
@@ -28,7 +28,7 @@ hashtable_iterator(struct hashtable *h);
 /* hashtable_iterator_key
  * - return the value of the (key,value) pair at the current position */
 
-extern inline void *
+static inline void *
 hashtable_iterator_key(struct hashtable_itr *i)
 {
     return i->e->k;
@@ -37,7 +37,7 @@ hashtable_iterator_key(struct hashtable_
 /*****************************************************************************/
 /* value - return the value of the (key,value) pair at the current position */
 
-extern inline void *
+static inline void *
 hashtable_iterator_value(struct hashtable_itr *i)
 {
     return i->e->v;
Index: git/mkfs.ubifs/hashtable/hashtable_itr.c
===================================================================
--- git.orig/mkfs.ubifs/hashtable/hashtable_itr.c
+++ git/mkfs.ubifs/hashtable/hashtable_itr.c
@@ -35,18 +35,6 @@ hashtable_iterator(struct hashtable *h)
 }
 
 /*****************************************************************************/
-/* key      - return the key of the (key,value) pair at the current position */
-/* value    - return the value of the (key,value) pair at the current position */
-
-void *
-hashtable_iterator_key(struct hashtable_itr *i)
-{ return i->e->k; }
-
-void *
-hashtable_iterator_value(struct hashtable_itr *i)
-{ return i->e->v; }
-
-/*****************************************************************************/
 /* advance - advance the iterator to the next element
  *           returns zero if advanced to end of table */
 
