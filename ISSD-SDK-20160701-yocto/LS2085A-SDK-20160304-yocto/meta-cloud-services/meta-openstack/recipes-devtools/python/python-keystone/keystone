#!/bin/sh

### BEGIN INIT INFO
# Provides:          keystone
# Required-Start: $remote_fs $network $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: Keystone Server
# Description: OpenStack identity Service (code-named keystone)
### END INIT INFO

DESC="keystone"
DAEMON="/usr/bin/keystone-all"
PIDFILE="/var/run/keystone-all.pid"

start ()
{
    if [ -e $PIDFILE ]; then
        PIDDIR=/proc/$(cat $PIDFILE)
        if [ -d ${PIDDIR} ]; then
            echo "$DESC already running."
            exit 1
        else
            echo "Removing stale PID file $PIDFILE"
            rm -f $PIDFILE
        fi
    fi

    if [ ! -d /var/log/keystone ]; then
        mkdir /var/log/keystone                                                     
    fi
    echo -n "Starting $DESC..."

    start-stop-daemon --start --quiet --background \
        --pidfile ${PIDFILE} --make-pidfile --exec ${DAEMON} \
	-- --log-dir=/var/log/keystone

    if [ $? -eq 0 ]; then
        echo "done."
    else
        echo "failed."
    fi
}

stop ()
{
    echo -n "Stopping $DESC..."
    start-stop-daemon --stop --quiet --pidfile $PIDFILE
    if [ $? -eq 0 ]; then
        echo "done."
    else
        echo "failed."
    fi
    rm -f $PIDFILE
}

status()
{
    pid=`cat $PIDFILE 2>/dev/null`
    if [ -n "$pid" ]; then
        if ps -p $pid > /dev/null 2>&1 ; then
            echo "$DESC is running"
            return
        fi
    fi
    echo "$DESC is not running"
}

reset()
{
    # Cleanup keystone tenant
    . /etc/nova/openrc
    simple_delete "keystone user-list" "keystone user-delete" 1 "keystone user"
    simple_delete "keystone tenant-list" "keystone tenant-delete" 1 "keystone tenant"
    simple_delete "keystone role-list" "keystone role-delete" 1 "keystone role"
    simple_delete "keystone endpoint-list" "keystone endpoint-delete" 1 "keystone endpoint"
    simple_delete "keystone service-list" "keystone service-delete" 1 "keystone service"

    stop

    # This is to make sure postgres is configured and running
    if ! pidof postmaster > /dev/null; then
        /etc/init.d/postgresql-init
        /etc/init.d/postgresql start
        sleep 2
    fi

    sudo -u postgres dropdb keystone
    sudo -u postgres createdb keystone
    keystone-manage db_sync
    keystone-manage pki_setup --keystone-user=root --keystone-group=root

    start

    sleep 2

    ADMIN_PASSWORD=%ADMIN_PASSWORD% \
    SERVICE_PASSWORD=%SERVICE_PASSWORD% \
    SERVICE_TENANT_NAME=%SERVICE_TENANT_NAME% \
        bash /etc/keystone/service-user-setup
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart|force-reload|reload)
        stop
        start
        ;;
    status)
	status
        ;;
    reset)
	reset
        ;;
    *)
        echo "Usage: $0 {start|stop|force-reload|restart|reload|status|reset}"
        exit 1
        ;;
esac

exit 0
