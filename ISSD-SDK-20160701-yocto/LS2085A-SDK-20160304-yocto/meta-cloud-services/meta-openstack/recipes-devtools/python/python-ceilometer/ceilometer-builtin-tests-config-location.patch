ceilometer builtin tests config location

Many ceilometer built-in testcases failed because they
can not find ceilometer configuration files, as these
testcases use relative paths for finding these configuration
files.  So forcing these failure testcases to look for
these configuration file using absolute path.

Signed-off-by: Vu Tran <vu.tran@windriver.com>

Index: git/ceilometer/tests/agentbase.py
===================================================================
--- git.orig/ceilometer/tests/agentbase.py
+++ git/ceilometer/tests/agentbase.py
@@ -234,7 +234,7 @@
         self.CONF = self.useFixture(config.Config()).conf
         self.CONF.set_override(
             'pipeline_cfg_file',
-            self.path_get('etc/ceilometer/pipeline.yaml')
+            self.path_get('/etc/ceilometer/pipeline.yaml')
         )
         self.useFixture(mockpatch.PatchObject(
             publisher, 'get_publisher', side_effect=self.get_publisher))
Index: git/ceilometer/tests/api/__init__.py
===================================================================
--- git.orig/ceilometer/tests/api/__init__.py
+++ git/ceilometer/tests/api/__init__.py
@@ -46,7 +46,7 @@
         self.CONF.set_override("auth_version", "v2.0",
                                group=OPT_GROUP_NAME)
         self.CONF.set_override("policy_file",
-                               self.path_get('etc/ceilometer/policy.json'))
+                               self.path_get('/etc/ceilometer/policy.json'))
         self.app = self._make_app()
 
     def _make_app(self, enable_acl=False):
Index: git/ceilometer/tests/api/v2/test_app.py
===================================================================
--- git.orig/ceilometer/tests/api/v2/test_app.py
+++ git/ceilometer/tests/api/v2/test_app.py
@@ -45,7 +45,7 @@
         self.CONF.set_override("auth_version", "v2.0",
                                group=acl.OPT_GROUP_NAME)
         self.CONF.set_override("pipeline_cfg_file",
-                               self.path_get("etc/ceilometer/pipeline.yaml"))
+                               self.path_get("/etc/ceilometer/pipeline.yaml"))
         self.CONF.set_override('connection', "log://", group="database")
         self.CONF.set_override("auth_uri", None, group=acl.OPT_GROUP_NAME)
         file_name = self.path_get('etc/ceilometer/api_paste.ini')
@@ -55,7 +55,7 @@
         self.assertTrue(api_app.auth_uri.startswith('file'))
 
     def test_keystone_middleware_parse_conffile(self):
-        pipeline_conf = self.path_get("etc/ceilometer/pipeline.yaml")
+        pipeline_conf = self.path_get("/etc/ceilometer/pipeline.yaml")
         api_conf = self.path_get('etc/ceilometer/api_paste.ini')
         content = ("[DEFAULT]\n"
                    "rpc_backend = fake\n"
Index: git/ceilometer/tests/db.py
===================================================================
--- git.orig/ceilometer/tests/db.py
+++ git/ceilometer/tests/db.py
@@ -137,7 +137,7 @@
         self.CONF.import_opt('pipeline_cfg_file', 'ceilometer.pipeline')
         self.CONF.set_override(
             'pipeline_cfg_file',
-            self.path_get('etc/ceilometer/pipeline.yaml')
+            self.path_get('/etc/ceilometer/pipeline.yaml')
         )
 
     def tearDown(self):
Index: git/ceilometer/tests/test_bin.py
===================================================================
--- git.orig/ceilometer/tests/test_bin.py
+++ git/ceilometer/tests/test_bin.py
@@ -79,7 +79,7 @@
 class BinSendSampleTestCase(base.BaseTestCase):
     def setUp(self):
         super(BinSendSampleTestCase, self).setUp()
-        pipeline_cfg_file = self.path_get('etc/ceilometer/pipeline.yaml')
+        pipeline_cfg_file = self.path_get('/etc/ceilometer/pipeline.yaml')
         content = ("[DEFAULT]\n"
                    "rpc_backend=fake\n"
                    "pipeline_cfg_file={0}\n".format(pipeline_cfg_file))
@@ -116,8 +116,8 @@
         # create ceilometer.conf file
         self.api_port = random.randint(10000, 11000)
         self.http = httplib2.Http()
-        pipeline_cfg_file = self.path_get('etc/ceilometer/pipeline.yaml')
-        policy_file = self.path_get('etc/ceilometer/policy.json')
+        pipeline_cfg_file = self.path_get('/etc/ceilometer/pipeline.yaml')
+        policy_file = self.path_get('/etc/ceilometer/policy.json')
         content = ("[DEFAULT]\n"
                    "rpc_backend=fake\n"
                    "auth_strategy=noauth\n"
Index: git/ceilometer/tests/test_decoupled_pipeline.py
===================================================================
--- git.orig/ceilometer/tests/test_decoupled_pipeline.py
+++ git/ceilometer/tests/test_decoupled_pipeline.py
@@ -209,7 +209,7 @@
 
     def _do_test_rate_of_change_in_boilerplate_pipeline_cfg(self, index,
                                                             meters, units):
-        with open('etc/ceilometer/pipeline.yaml') as fap:
+        with open('/etc/ceilometer/pipeline.yaml') as fap:
             data = fap.read()
         pipeline_cfg = yaml.safe_load(data)
         for s in pipeline_cfg['sinks']:
Index: git/ceilometer/tests/test_deprecated_pipeline.py
===================================================================
--- git.orig/ceilometer/tests/test_deprecated_pipeline.py
+++ git/ceilometer/tests/test_deprecated_pipeline.py
@@ -75,7 +75,7 @@
 
     def _do_test_rate_of_change_in_boilerplate_pipeline_cfg(self, index,
                                                             meters, units):
-        with open('etc/ceilometer/deprecated_pipeline.yaml') as fap:
+        with open('/etc/ceilometer/deprecated_pipeline.yaml') as fap:
             data = fap.read()
         pipeline_cfg = yaml.safe_load(data)
         for p in pipeline_cfg:
