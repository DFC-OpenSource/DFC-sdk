Upstream-Status: Pending

Use the defaults.h in ${B} instead of ${S}, and t-oe in ${B}, so that
the source can be shared between gcc-cross-initial,
gcc-cross-intermediate, gcc-cross, gcc-runtime, and also the sdk build.
---
 gcc/Makefile.in  |    2 +-
 gcc/configure    |    4 ++--
 gcc/configure.ac |    4 ++--
 gcc/mkconfig.sh  |    4 ++--
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/gcc/Makefile.in b/gcc/Makefile.in
index 7790915..3a0c34a 100644
--- a/gcc/Makefile.in
+++ b/gcc/Makefile.in
@@ -463,7 +463,7 @@ LIMITS_H_TEST = [ -f $(SYSTEM_HEADER_DIR)/limits.h ]
 TARGET_SYSTEM_ROOT = @TARGET_SYSTEM_ROOT@
 
 xmake_file=@xmake_file@
-tmake_file=@tmake_file@
+tmake_file=@tmake_file@ ./t-oe
 TM_ENDIAN_CONFIG=@TM_ENDIAN_CONFIG@
 TM_MULTILIB_CONFIG=@TM_MULTILIB_CONFIG@
 TM_MULTILIB_EXCEPTIONS_CONFIG=@TM_MULTILIB_EXCEPTIONS_CONFIG@
diff --git a/gcc/configure b/gcc/configure
index 82fa3e4..d4711b5 100755
--- a/gcc/configure
+++ b/gcc/configure
@@ -11227,8 +11227,8 @@ for f in $tm_file; do
        tm_include_list="${tm_include_list} $f"
        ;;
     defaults.h )
-       tm_file_list="${tm_file_list} \$(srcdir)/$f"
-       tm_include_list="${tm_include_list} $f"
+       tm_file_list="${tm_file_list} ./$f"
+       tm_include_list="${tm_include_list} ./$f"
        ;;
     * )
        tm_file_list="${tm_file_list} \$(srcdir)/config/$f"
diff --git a/gcc/configure.ac b/gcc/configure.ac
index 844d8da..a960343 100644
--- a/gcc/configure.ac
+++ b/gcc/configure.ac
@@ -1628,8 +1628,8 @@ for f in $tm_file; do
        tm_include_list="${tm_include_list} $f"
        ;;
     defaults.h )
-       tm_file_list="${tm_file_list} \$(srcdir)/$f"
-       tm_include_list="${tm_include_list} $f"
+       tm_file_list="${tm_file_list} ./$f"
+       tm_include_list="${tm_include_list} ./$f"
        ;;
     * )
        tm_file_list="${tm_file_list} \$(srcdir)/config/$f"
diff --git a/gcc/mkconfig.sh b/gcc/mkconfig.sh
index d56df8c..875d0f1 100644
--- a/gcc/mkconfig.sh
+++ b/gcc/mkconfig.sh
@@ -77,7 +77,7 @@ if [ -n "$HEADERS" ]; then
     if [ $# -ge 1 ]; then
 	echo '#ifdef IN_GCC' >> ${output}T
 	for file in "$@"; do
-	    if test x"$file" = x"defaults.h"; then
+	    if test x"$file" = x"./defaults.h"; then
 		postpone_defaults_h="yes"
 	    else
 		echo "# include \"$file\"" >> ${output}T
@@ -103,7 +103,7 @@ esac
 
 # If we postponed including defaults.h, add the #include now.
 if test x"$postpone_defaults_h" = x"yes"; then
-    echo "# include \"defaults.h\"" >> ${output}T
+    echo "# include \"./defaults.h\"" >> ${output}T
 fi
 
 # Add multiple inclusion protection guard, part two.
-- 
1.7.1

